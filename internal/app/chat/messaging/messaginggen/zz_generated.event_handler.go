// +build !ignore_autogenerated

// Code generated by mga tool. DO NOT EDIT.

package messaginggen

import (
	"context"
	"fmt"

	"emperror.dev/errors"

	"github.com/prasetyowira/message/internal/app/chat/messaging"
)

// MessageSentHandler handles MessageSent events.
type MessageSentHandler interface {
	// MessageSent handles a(n) MessageSent event.
	NewMessageSent(ctx context.Context, event messaging.MessageSent) error
}

// MessageSentEventHandler handles MessageSent events.
type MessageSentEventHandler struct {
	handler MessageSentHandler
	name    string
}

// NewMessageSentEventHandler returns a new MessageSentEventHandler instance.
func NewMessageSentEventHandler(handler MessageSentHandler, name string) MessageSentEventHandler {
	return MessageSentEventHandler{
		handler: handler,
		name:    name,
	}
}

// HandlerName returns the name of the event handler.
func (h MessageSentEventHandler) HandlerName() string {
	return h.name
}

// NewEvent returns a new empty event used for serialization.
func (h MessageSentEventHandler) NewEvent() interface{} {
	return &messaging.MessageSent{}
}

// Handle handles an event.
func (h MessageSentEventHandler) Handle(ctx context.Context, event interface{}) error {
	e, ok := event.(*messaging.MessageSent)
	if !ok {
		return errors.NewWithDetails("unexpected event type", "type", fmt.Sprintf("%T", event))
	}

	return h.handler.NewMessageSent(ctx, *e)
}
