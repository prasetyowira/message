// +build !ignore_autogenerated

// Code generated by mga tool. DO NOT EDIT.

package messaginggen

import (
	"context"

	"emperror.dev/errors"

	"github.com/prasetyowira/message/internal/app/chat/messaging"
)

// EventBus is a generic event bus.
type EventBus interface {
	// Publish sends an event to the underlying message bus.
	Publish(ctx context.Context, event interface{}) error
}

// EventDispatcher dispatches events through the underlying generic event bus.
type EventDispatcher struct {
	bus EventBus
}

// NewEventDispatcher returns a new EventDispatcher instance.
func NewEventDispatcher(bus EventBus) EventDispatcher {
	return EventDispatcher{bus: bus}
}

// NewMessageSent dispatches a(n) MessageSent event.
func (d EventDispatcher) NewMessageSent(ctx context.Context, event messaging.MessageSent) error {
	err := d.bus.Publish(ctx, event)
	if err != nil {
		return errors.WithDetails(errors.WithMessage(err, "failed to dispatch event"), "event", "MessageSent")
	}

	return nil
}
